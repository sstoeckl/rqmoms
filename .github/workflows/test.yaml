name: reticulate-probe

on:
  workflow_dispatch: {}

jobs:
  probe:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout (shallow)
        uses: actions/checkout@v4
        with: { fetch-depth: 1 }

      - name: Set up R (RSPM)
        uses: r-lib/actions/setup-r@v2
        with: { use-public-rspm: true }

      - name: Install reticulate
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::reticulate
          needs: check

      - name: Set up Python 3.11 (toolcache)
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip

      - name: Install numpy + qmoms into toolcache Python
        shell: bash
        run: |
          set -euxo pipefail
          python -V
          python -m pip install --upgrade pip
          python -m pip install numpy pandas scipy tqdm
          python -m pip install "git+https://github.com/vilkovgr/qmoms@main"
          python - <<'PY'
          import sys, numpy, qmoms
          print("PY:", sys.executable)
          print("NumPy:", numpy.__version__)
          print("qmoms import: OK")
          PY

      - name: Probe reticulate binding (clean R session)
        env:
          # bind to the exact toolcache interpreter selected by setup-python
          RETICULATE_PYTHON: ${{ env.pythonLocation }}/bin/python
          # neutralize project/user startup files that may override RETICULATE_PYTHON
          R_ENVIRON_USER: /dev/null
          R_PROFILE_USER: /dev/null
        run: |
          Rscript --vanilla - <<'RS'
          stopifnot(requireNamespace("reticulate", quietly=TRUE))
          cat("RETICULATE_PYTHON=", Sys.getenv("RETICULATE_PYTHON"), "\n", sep="")
          reticulate::use_python(Sys.getenv("RETICULATE_PYTHON"), required=TRUE)
          reticulate::py_discover_config()
          reticulate::py_run_string('import sys, numpy, qmoms; print("R sees:", sys.executable); print("NumPy:", numpy.__version__); print("qmoms: OK")')
          py <- reticulate::py_eval("sys.executable")
          if (!grepl("/opt/hostedtoolcache/", py, fixed=TRUE)) stop("Not using toolcache python: ", py)
          RS
